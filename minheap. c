#include <stdio.h>
#include<stdlib.h>
int size=0,heap[10];
void insert();
void deletemin();
void display();
void percolatedown(int);
void main()
{
int op;
while(1)
{
 printf("1.Insert\n2.DeleteMin\n3.Display\n4.Exit\n");
 printf("Enter Your Choice : ");
 scanf("%d",&op);
 switch(op)
 {
 case 1 : insert();
 break;
 case 2 : deletemin();
 break;
 case 3 : display();
 break;
 case 4 : exit(0);
 default : printf("Choose a valid Option....\n");
 }
}
}
void insert()
{
int hole,x;
if(size>10)
printf("Heap is full...\n");
else
{
 hole=++size;
 printf("Enter element to be inserted : ");
 scanf("%d",&x);
 for(;hole>1&&heap[hole/2]>x;hole/=2)
 {
 heap[hole]=heap[hole/2];
 }
 heap[hole]=x;
}
}
void deletemin()
{
int x=heap[1];
if(size==0)
printf("Heap is empty...\n");
else
{
 heap[1]=heap[size--];
  percolatedown(1);
 printf("Min Element is Deleted successfully...\n");
}
}
void percolatedown(int hole)
{
int left,right,temp,min,target;
min=heap[hole];
while(2*hole<=size)
{
 left=2*hole;
 right=left+1;
 if(right<=size&&heap[right]<heap[left])
 target=right;
 else
 target=left;
 if(heap[target]<min)
 {
 temp=heap[hole];
 heap[hole]=heap[target];
 heap[target]=temp;
 hole=target;
 }
 else
 break;
}
heap[hole]=min;
}
void display()
{
int i;
if(size==0)
printf("Heap is Empty...\n");
else
{
 printf("BINARY HEAP\n");
 for(i=1;i<=size;i++)
 {
 printf("%d ",heap[i]);
 }
 printf("\n");
}
}
